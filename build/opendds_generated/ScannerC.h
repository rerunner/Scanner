// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.20
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:148

#ifndef _TAO_IDL__HOME_RERUN_PROJECTS_LITHOFAB_SCANNER_BUILD_OPENDDS_GENERATED_SCANNERC_H_
#define _TAO_IDL__HOME_RERUN_PROJECTS_LITHOFAB_SCANNER_BUILD_OPENDDS_GENERATED_SCANNERC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/ORB.h"
#include "tao/Basic_Types_IDLv4.h"
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  using namespace IDLv4;
}

TAO_END_VERSIONED_NAMESPACE_DECL

#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 20
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

namespace scanner
{
  // TAO_IDL - Generated from
  // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:34

  namespace generated
  {
    // TAO_IDL - Generated from
    // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

    

    const char *const WAFER_HEIGHTMAP_TOPIC = "WaferHeightMap";
    // TAO_IDL - Generated from
    // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_constant/constant_ch.cpp:34

    

    const CORBA::Long MAX_MEASUREMENT_STEPS = 10000;
    // TAO_IDL - Generated from
    // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_type.cpp:257

    

    struct Position;

    typedef
      ::TAO_Fixed_Var_T<
          Position
        >
      Position_var;

    typedef
      Position &
      Position_out;

    
    // TAO_IDL - Generated from
    // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

    

    struct  Position
    {
      // TAO_IDL - Generated from
      // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_type.cpp:301

      
      typedef Position_var _var_type;
      typedef Position_out _out_type;
      
      ::CORBA::Long xPos;
      ::CORBA::Long yPos;
    };
    // TAO_IDL - Generated from
    // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_type.cpp:257

    

    struct Measurement;

    typedef
      ::TAO_Fixed_Var_T<
          Measurement
        >
      Measurement_var;

    typedef
      Measurement &
      Measurement_out;

    
    // TAO_IDL - Generated from
    // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

    

    struct  Measurement
    {
      // TAO_IDL - Generated from
      // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_type.cpp:301

      
      typedef Measurement_var _var_type;
      typedef Measurement_out _out_type;
      
      scanner::generated::Position xyPosition;
      ::CORBA::Long zPos;
    };

    
    // TAO_IDL - Generated from
    // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:98

    

#if !defined (_SCANNER_GENERATED_MEASUREMENTSTYPE_CH_)
#define _SCANNER_GENERATED_MEASUREMENTSTYPE_CH_

    class measurementsType;
    typedef ::TAO_FixedSeq_Var_T<measurementsType> measurementsType_var;
    typedef ::TAO_Seq_Out_T<measurementsType> measurementsType_out;
    

    class  measurementsType
      : public
          ::TAO::bounded_value_sequence< Measurement,10000>
    {
    public:
      measurementsType (void);
      measurementsType (
        ::CORBA::ULong length,
        Measurement* buffer,
        ::CORBA::Boolean release = false);
#if defined (ACE_HAS_CPP11)
      measurementsType (const measurementsType &) = default;
      measurementsType (measurementsType &&) = default;
      measurementsType& operator= (const measurementsType &) = default;
      measurementsType& operator= (measurementsType &&) = default;
#endif /* ACE_HAS_CPP11 */
      virtual ~measurementsType (void);
      
      // TAO_IDL - Generated from
      // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_type.cpp:301

      
      typedef measurementsType_var _var_type;
      typedef measurementsType_out _out_type;
    };

#endif /* end #if !defined */
    // TAO_IDL - Generated from
    // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_type.cpp:257

    

    struct WaferHeightMap;

    typedef
      ::TAO_Var_Var_T<
          WaferHeightMap
        >
      WaferHeightMap_var;

    typedef
      ::TAO_Out_T<
          WaferHeightMap
        >
      WaferHeightMap_out;

    
    // TAO_IDL - Generated from
    // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/structure_ch.cpp:47

    

    struct  WaferHeightMap
    {
      // TAO_IDL - Generated from
      // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_type.cpp:301

      
      typedef WaferHeightMap_var _var_type;
      typedef WaferHeightMap_out _out_type;
      
      ::CORBA::Long waferID;
      scanner::generated::measurementsType measurements;
    };
  
  
  // TAO_IDL - Generated from
  // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62

  
  } // module scanner::generated


// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_module/module_ch.cpp:62


} // module scanner
// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:932

  

  template<>
  class Arg_Traits< ::scanner::generated::Position>
    : public
        Fixed_Size_Arg_Traits_T<
            ::scanner::generated::Position,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:932

  

  template<>
  class Arg_Traits< ::scanner::generated::Measurement>
    : public
        Fixed_Size_Arg_Traits_T<
            ::scanner::generated::Measurement,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:672

  

  template<>
  class Arg_Traits< ::scanner::generated::measurementsType>
    : public
        Var_Size_Arg_Traits_T<
            ::scanner::generated::measurementsType,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
  // TAO_IDL - Generated from
  // /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:932

  

  template<>
  class Arg_Traits< ::scanner::generated::WaferHeightMap>
    : public
        Var_Size_Arg_Traits_T<
            ::scanner::generated::WaferHeightMap,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const scanner::generated::Position &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, scanner::generated::Position &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const scanner::generated::Measurement &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, scanner::generated::Measurement &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:64



#if !defined _TAO_CDR_OP_scanner_generated_measurementsType_H_
#define _TAO_CDR_OP_scanner_generated_measurementsType_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const scanner::generated::measurementsType &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    scanner::generated::measurementsType &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_scanner_generated_measurementsType_H_ */
// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const scanner::generated::WaferHeightMap &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, scanner::generated::WaferHeightMap &);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:1649

#if defined (__ACE_INLINE__)
#include "ScannerC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

