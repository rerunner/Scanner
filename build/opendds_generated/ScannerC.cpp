// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.20
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:372


#include "ScannerC.h"
#include "tao/CDR.h"

#if !defined (__ACE_INLINE__)
#include "ScannerC.inl"
#endif /* !defined INLINE */


// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:104



#if !defined (_SCANNER_GENERATED_MEASUREMENTSTYPE_CS_)
#define _SCANNER_GENERATED_MEASUREMENTSTYPE_CS_

scanner::generated::measurementsType::measurementsType (void)
{}

scanner::generated::measurementsType::measurementsType (
    ::CORBA::ULong length,
    scanner::generated::Measurement * buffer,
    ::CORBA::Boolean release)
  : ::TAO::bounded_value_sequence< Measurement,10000>
    (length, buffer, release)
{}

scanner::generated::measurementsType::~measurementsType (void)
{}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const scanner::generated::Position &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.xPos) &&
    (strm << _tao_aggregate.yPos);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    scanner::generated::Position &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.xPos) &&
    (strm >> _tao_aggregate.yPos);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const scanner::generated::Measurement &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.xyPosition) &&
    (strm << _tao_aggregate.zPos);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    scanner::generated::Measurement &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.xyPosition) &&
    (strm >> _tao_aggregate.zPos);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:92

#if !defined _TAO_CDR_OP_scanner_generated_measurementsType_CPP_
#define _TAO_CDR_OP_scanner_generated_measurementsType_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const scanner::generated::measurementsType &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    scanner::generated::measurementsType &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_scanner_generated_measurementsType_CPP_ */
// TAO_IDL - Generated from
// /home/rerun/Projects/OpenDDS/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const scanner::generated::WaferHeightMap &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.waferID) &&
    (strm << _tao_aggregate.measurements);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    scanner::generated::WaferHeightMap &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.waferID) &&
    (strm >> _tao_aggregate.measurements);
}

TAO_END_VERSIONED_NAMESPACE_DECL



