import "./Scanner-modelMC.cml"
import "./Scanner-modelMeasure.cml"
import "./Scanner-modelExpose.cml"

/* The Wafer stage application modeled in CML. */
ContextMap ScannerWaferStageContextMap {

	// Machine Control
	contains MachineControlContext

	/* Measure */	
	contains StageAlignmentContext /* Horizontal & Vertical Stage Align measure the Reference Point */
	contains WaferAlignmentContext /* Determines the wafer coordinate system by measuring the wafer alignment marks */
	contains LevelingContext /* Leveling, measurement of the wafer heigh map (height differences due to wafer wobble/warping) */
	
	/* Wafer Swap */
	//contains WaferSwapContext /* Swapping the position module, including the wafer, between measure and expose stages */

	/* Expose */
	contains ExposeManagement
	contains ReticleAlignContext /* The reticle contains the image (the integrated circuit pattern) to be printed and is
								  * aligned to the reference point on the Position Module (Using the alignment sensor) */
	contains ExposeContext /* Exposure of the wafer, using the heighmap for vertical beam focus correction */
	/* After exposure the position module is moved back to measure and finally unloaded */
	
	
	/* The expose application can be seen as separated bounded context. 
	 * However, it still shares code with the measuring application (LevelingContext).
	 * Thus, they are in a 'Shared-Kernel' relationship.
	 */
	MachineControlContext [SK]<->[SK] StageAlignmentContext
	MachineControlContext [SK]<->[SK] LevelingContext
	MachineControlContext [SK]<->[SK] WaferAlignmentContext
	MachineControlContext [SK]<->[SK] ExposeManagement
	MachineControlContext [SK]<->[SK] ExposeContext
	LevelingContext [U,S]->[D,C] ExposeContext
	LevelingContext [U,S]->[D,C] MachineControlContext
	ExposeContext [SK]<->[SK] ReticleAlignContext
	ExposeContext [U,S]->[D,C] MachineControlContext
}

Domain ScannerDomain {
	// Current focus on Wafer stage
	Subdomain MachineControlDomain {
		type = GENERIC_SUBDOMAIN
		domainVisionStatement = "Subdomain managing everything machine control-related."
	}
	Subdomain MeasureDomain {
		type = GENERIC_SUBDOMAIN
		domainVisionStatement = "Subdomain managing everything measure-related."
	}
	Subdomain ExposeDomain {
		type = GENERIC_SUBDOMAIN
		domainVisionStatement = "Subdomain managing everything expose-related."
	}
}

